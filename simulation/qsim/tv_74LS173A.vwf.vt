// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/10/2023 19:03:43"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ci_74LS173A
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ci_74LS173A_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clear;
reg clock;
reg D0;
reg D1;
reg D2;
reg D3;
reg IE1;
reg IE2;
reg OE1;
reg OE2;
// wires                                               
wire Q0;
wire Q1;
wire Q2;
wire Q3;

// assign statements (if any)                          
ci_74LS173A i1 (
// port map - connection between master ports and signals/registers   
	.clear(clear),
	.clock(clock),
	.D0(D0),
	.D1(D1),
	.D2(D2),
	.D3(D3),
	.IE1(IE1),
	.IE2(IE2),
	.OE1(OE1),
	.OE2(OE2),
	.Q0(Q0),
	.Q1(Q1),
	.Q2(Q2),
	.Q3(Q3)
);
initial 
begin 
#1000000 $finish;
end 

// clear
initial
begin
	clear = 1'b1;
	clear = #70000 1'b0;
	clear = #830000 1'b1;
	clear = #50000 1'b0;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #50000 1'b1;
	#50000;
end 

// D0
initial
begin
	D0 = 1'b0;
	D0 = #640000 1'b1;
	D0 = #200000 1'b0;
end 

// D1
initial
begin
	D1 = 1'b0;
end 

// D2
initial
begin
	D2 = 1'b0;
end 

// D3
initial
begin
	D3 = 1'b0;
	D3 = #640000 1'b1;
	D3 = #80000 1'b0;
end 

// IE1
initial
begin
	IE1 = 1'b0;
	IE1 = #140000 1'b1;
	IE1 = #50000 1'b0;
end 

// IE2
initial
begin
	IE2 = 1'b0;
	IE2 = #330000 1'b1;
	IE2 = #70000 1'b0;
	IE2 = #430000 1'b1;
	IE2 = #70000 1'b0;
end 

// OE1
initial
begin
	OE1 = 1'b0;
end 

// OE2
initial
begin
	OE2 = 1'b0;
end 
endmodule


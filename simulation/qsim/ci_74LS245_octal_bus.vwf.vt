// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/13/2023 12:51:10"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ci_74LS245_octal_bus
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ci_74LS245_octal_bus_vlg_vec_tst();
// constants                                           
// general purpose registers
reg treg_A0;
reg treg_A1;
reg treg_A2;
reg treg_A3;
reg treg_A4;
reg treg_A5;
reg treg_A6;
reg treg_A7;
reg treg_AB_BA;
reg treg_B0;
reg treg_B1;
reg treg_B2;
reg treg_B3;
reg treg_B4;
reg treg_B5;
reg treg_B6;
reg treg_B7;
reg treg_CE;
// wires                                               
wire A0;
wire A1;
wire A2;
wire A3;
wire A4;
wire A5;
wire A6;
wire A7;
wire AB_BA;
wire B0;
wire B1;
wire B2;
wire B3;
wire B4;
wire B5;
wire B6;
wire B7;
wire CE;

// assign statements (if any)                          
assign A0 = treg_A0;
assign A1 = treg_A1;
assign A2 = treg_A2;
assign A3 = treg_A3;
assign A4 = treg_A4;
assign A5 = treg_A5;
assign A6 = treg_A6;
assign A7 = treg_A7;
assign AB_BA = treg_AB_BA;
assign B0 = treg_B0;
assign B1 = treg_B1;
assign B2 = treg_B2;
assign B3 = treg_B3;
assign B4 = treg_B4;
assign B5 = treg_B5;
assign B6 = treg_B6;
assign B7 = treg_B7;
assign CE = treg_CE;
ci_74LS245_octal_bus i1 (
// port map - connection between master ports and signals/registers   
	.A0(A0),
	.A1(A1),
	.A2(A2),
	.A3(A3),
	.A4(A4),
	.A5(A5),
	.A6(A6),
	.A7(A7),
	.AB_BA(AB_BA),
	.B0(B0),
	.B1(B1),
	.B2(B2),
	.B3(B3),
	.B4(B4),
	.B5(B5),
	.B6(B6),
	.B7(B7),
	.CE(CE)
);
initial 
begin 
#1000000 $finish;
end 

// A0
initial
begin
	treg_A0 = 1'bZ;
	treg_A0 = #80000 1'b1;
	treg_A0 = #30000 1'bZ;
	treg_A0 = #150000 1'b1;
	treg_A0 = #80000 1'bZ;
	treg_A0 = #120000 1'b0;
	treg_A0 = #300000 1'bZ;
end 

// A1
initial
begin
	treg_A1 = 1'bZ;
	treg_A1 = #80000 1'b1;
	treg_A1 = #30000 1'bZ;
	treg_A1 = #150000 1'b1;
	treg_A1 = #80000 1'bZ;
	treg_A1 = #120000 1'b0;
	treg_A1 = #300000 1'bZ;
end 

// A2
initial
begin
	treg_A2 = 1'bZ;
	treg_A2 = #80000 1'b1;
	treg_A2 = #30000 1'bZ;
	treg_A2 = #150000 1'b1;
	treg_A2 = #80000 1'bZ;
	treg_A2 = #120000 1'b0;
	treg_A2 = #300000 1'bZ;
end 

// A3
initial
begin
	treg_A3 = 1'bZ;
	treg_A3 = #80000 1'b1;
	treg_A3 = #30000 1'bZ;
	treg_A3 = #150000 1'b1;
	treg_A3 = #80000 1'bZ;
	treg_A3 = #120000 1'b0;
	treg_A3 = #300000 1'bZ;
end 

// A4
initial
begin
	treg_A4 = 1'bZ;
	treg_A4 = #80000 1'b1;
	treg_A4 = #30000 1'bZ;
	treg_A4 = #150000 1'b1;
	treg_A4 = #80000 1'bZ;
	treg_A4 = #120000 1'b0;
	treg_A4 = #300000 1'bZ;
end 

// A5
initial
begin
	treg_A5 = 1'bZ;
	treg_A5 = #80000 1'b1;
	treg_A5 = #30000 1'bZ;
	treg_A5 = #150000 1'b1;
	treg_A5 = #80000 1'bZ;
	treg_A5 = #120000 1'b0;
	treg_A5 = #300000 1'bZ;
end 

// A6
initial
begin
	treg_A6 = 1'bZ;
	treg_A6 = #80000 1'b1;
	treg_A6 = #30000 1'bZ;
	treg_A6 = #150000 1'b1;
	treg_A6 = #80000 1'bZ;
	treg_A6 = #120000 1'b0;
	treg_A6 = #300000 1'bZ;
end 

// A7
initial
begin
	treg_A7 = 1'bZ;
	treg_A7 = #80000 1'b1;
	treg_A7 = #30000 1'bZ;
	treg_A7 = #150000 1'b1;
	treg_A7 = #80000 1'bZ;
	treg_A7 = #120000 1'b0;
	treg_A7 = #300000 1'bZ;
end 

// AB_BA
initial
begin
	treg_AB_BA = 1'b0;
	treg_AB_BA = #250000 1'b1;
	treg_AB_BA = #650000 1'bZ;
end 

// B0
initial
begin
	treg_B0 = 1'b1;
	treg_B0 = #75000 1'b0;
	treg_B0 = #55000 1'bZ;
	treg_B0 = #350000 1'b1;
	treg_B0 = #40000 1'bZ;
end 

// B1
initial
begin
	treg_B1 = 1'b1;
	treg_B1 = #75000 1'b0;
	treg_B1 = #55000 1'bZ;
	treg_B1 = #350000 1'b1;
	treg_B1 = #40000 1'bZ;
end 

// B2
initial
begin
	treg_B2 = 1'b1;
	treg_B2 = #75000 1'b0;
	treg_B2 = #55000 1'bZ;
	treg_B2 = #350000 1'b1;
	treg_B2 = #40000 1'bZ;
end 

// B3
initial
begin
	treg_B3 = 1'b1;
	treg_B3 = #75000 1'b0;
	treg_B3 = #55000 1'bZ;
end 

// B4
initial
begin
	treg_B4 = 1'b1;
	treg_B4 = #75000 1'b0;
	treg_B4 = #55000 1'bZ;
end 

// B5
initial
begin
	treg_B5 = 1'b1;
	treg_B5 = #75000 1'b0;
	treg_B5 = #55000 1'bZ;
end 

// B6
initial
begin
	treg_B6 = 1'b1;
	treg_B6 = #75000 1'b0;
	treg_B6 = #55000 1'bZ;
end 

// B7
initial
begin
	treg_B7 = 1'b1;
	treg_B7 = #75000 1'b0;
	treg_B7 = #55000 1'bZ;
end 

// CE
initial
begin
	treg_CE = 1'b0;
	treg_CE = #540000 1'b1;
	treg_CE = #300000 1'bZ;
end 
endmodule

